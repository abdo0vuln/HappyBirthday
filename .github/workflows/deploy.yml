name: Deploy Birthday Website to VPS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests (if any)
      run: npm test --if-present
    
    - name: Build Docker image
      run: docker build -t birthday-website .
    
    - name: Test Docker container
      run: |
        docker run -d -p 3000:3000 --name test-container birthday-website
        sleep 10
        curl -f http://localhost:3000 || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Navigate to project directory (create if doesn't exist)
          mkdir -p ~/birthday-website
          cd ~/birthday-website
          
          # Pull latest changes from GitHub
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/${{ github.repository }} .
          fi
          
          # Stop existing container if running
          docker stop birthday-fun-app || true
          docker rm birthday-fun-app || true
          
          # Remove old image
          docker rmi birthday-website || true
          
          # Build and run new container
          docker build -t birthday-website .
          docker run -d \
            --name birthday-fun-app \
            -p 3000:3000 \
            --restart unless-stopped \
            birthday-website
          
          # Clean up unused Docker resources
          docker system prune -f
          
          echo "ðŸŽ‰ Birthday website deployed successfully! ðŸŽ‚"
